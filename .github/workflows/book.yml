name: Build book

on:
  push:
    branches-ignore:
      - gh-pages
      - gh-pages-*
  release:
    types:
      - created

env:
  PUBLISH_BRANCH: ${{ (github.ref_name == 'main' && 'gh-pages') || (startsWith(github.ref_name, 'releng/') && format('{0}{1}', 'gh-pages-', github.ref_name)) }}

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Install cargo
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install mdbook
        run: curl -sSL https://github.com/rust-lang/mdBook/releases/download/v0.4.2/mdbook-v0.4.2-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=$HOME/.cargo/bin

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Build
        run: mdbook build

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: book
          path: book

  draft-release:
    if: github.event_name == 'push' && (github.ref_name == 'main' || startsWith(github.ref_name, 'releng/'))
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Get current date
        id: date
        run: |
          current_date=$(date -u +'%Y%m%d')
          echo "::set-output name=date::${current_date}"
          echo "::set-output name=tag_name::draft-${current_date}-${{ github.sha }}"

      - uses: mukunku/tag-exists-action@v1.5.0
        id: check-tag
        with:
          tag: ${{ steps.date.outputs.tag_name }}

      - name: Download artifact
        uses: actions/download-artifact@v2
        if: steps.check-tag.outputs.exists == 'false'
        with:
          name: book
          path: cheribsd-getting-started-snapshot

      - name: Create archive
        if: steps.check-tag.outputs.exists == 'false'
        run: zip -r cheribsd-getting-started-snapshot-${{ github.sha }}.zip cheribsd-getting-started-snapshot

      - name: Create release
        id: create_release
        if: steps.check-tag.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date.outputs.tag_name }}
          release_name: Draft release ${{ steps.date.outputs.date }}
          body: Latest snapshot (${{ github.sha }})
          prerelease: true

      - name: Upload release asset
        id: upload-release-asset
        if: steps.check-tag.outputs.exists == 'false'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cheribsd-getting-started-snapshot-${{ github.sha }}.zip
          asset_name: cheribsd-getting-started-snapshot-${{ github.sha }}.zip
          asset_content_type: application/zip

  release:
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: book
          path: cheribsd-getting-started-${{ github.event.release.tag_name }}

      - name: Create archive
        run: zip -r cheribsd-getting-started-${{ github.event.release.tag_name }}.zip cheribsd-getting-started-${{ github.event.release.tag_name }}

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: cheribsd-getting-started-${{ github.event.release.tag_name }}.zip
          asset_name: cheribsd-getting-started-${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip

  deploy:
    if: github.event_name == 'push' && (github.ref_name == 'main' || startsWith(github.ref_name, 'releng/'))
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: book
          path: public

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: ${{ env.PUBLISH_BRANCH }}
